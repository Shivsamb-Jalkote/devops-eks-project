pipeline {
  agent any
  environment {
    DOCKERHUB_CREDENTIALS = 'dockerhub-creds'
    DOCKER_IMAGE = "shivjalkote/eks-nginx-app"
    IMAGE_TAG = "v${env.BUILD_NUMBER}"
    KUBECONFIG_CRED = 'kubeconfig-file'
  }
  stages {
    stage('Checkout') { steps { checkout scm } }
    stage('Build Docker Image') { steps { sh "docker build -t $DOCKER_IMAGE:$IMAGE_TAG ./app" } }
    stage('Push to Docker Hub') { steps { withCredentials([usernamePassword(credentialsId: env.DOCKERHUB_CREDENTIALS, usernameVariable: 'DH_USER', passwordVariable: 'DH_PASS')]) { sh '''    echo $DH_PASS | docker login -u $DH_USER --password-stdin
docker push $DOCKER_IMAGE:$IMAGE_TAG
''' } } }
    stage('Deploy to EKS via Helm') { steps { withCredentials([file(credentialsId: env.KUBECONFIG_CRED, variable: 'KUBECONF')]) { sh '''    mkdir -p ~/.kube
cp $KUBECONF ~/.kube/config
chmod 600 ~/.kube/config
helm repo update || true
helm upgrade --install hello-release ./helm-chart --set image.repository=$DOCKER_IMAGE --set image.tag=$IMAGE_TAG --wait
''' } } }
    stage('Verify Deployment') { steps { sh "kubectl get svc hello-release -o wide || true" } }
  }
  post { always { sh 'docker image prune -af || true' } }
}
